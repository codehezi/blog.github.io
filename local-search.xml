<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux安装git</title>
    <link href="/2022/07/20/git/"/>
    <url>/2022/07/20/git/</url>
    
    <content type="html"><![CDATA[<h3 id="liunx安装git"><a href="#liunx安装git" class="headerlink" title="liunx安装git"></a>liunx安装git</h3><blockquote><p>git管理codeing的版本需要git版本至少是1.8.0以上</p></blockquote><h2 id="安装git的依赖"><a href="#安装git的依赖" class="headerlink" title="安装git的依赖"></a><em>安装git的依赖</em></h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker<br></code></pre></td></tr></table></figure><h2 id="删除已有的git，这个版本默认是1-8-0左右的"><a href="#删除已有的git，这个版本默认是1-8-0左右的" class="headerlink" title="删除已有的git，这个版本默认是1.8.0左右的"></a>删除已有的git，这个版本默认是1.8.0左右的</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yum <span class="hljs-built_in">remove</span> git<br></code></pre></td></tr></table></figure><h2 id="下载git源码"><a href="#下载git源码" class="headerlink" title="下载git源码"></a>下载git源码</h2><ul><li>进入下载的目录在（以 /usr/local/git 目录为例） <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"> wget https:<span class="hljs-regexp">//</span>www.kernel.org<span class="hljs-regexp">/pub/</span>software<span class="hljs-regexp">/scm/gi</span>t/git-<span class="hljs-number">2.8</span>.<span class="hljs-number">3</span>.tar.gz<br>```  <br>- 将下载的压缩包解压<br></code></pre></td></tr></table></figure>tar -zxvf git-2.8.3.tar.gz<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>进到解压后的目录配置Git的安装路径<br></code></pre></td></tr></table></figure>./configure prefix=/usr/local/git/<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>编译并且安装<br></code></pre></td></tr></table></figure>make &amp;&amp; make install<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>然后可以查看下Git的版本<br></code></pre></td></tr></table></figure>git –version<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">- 将git指令添加到 <span class="hljs-regexp">/etc/</span>profile 中<br></code></pre></td></tr></table></figure>#在这个文件的后面加上<br>export PATH=$PATH:/usr/local/git/bin<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>执行命令是的文件生效<br></code></pre></td></tr></table></figure>source /etc/profile<br>```<blockquote><p>linux的git安装成功</p></blockquote></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo</title>
    <link href="/2022/07/20/hexo/"/>
    <url>/2022/07/20/hexo/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>liunx安装docker容器</title>
    <link href="/2022/07/19/linux/"/>
    <url>/2022/07/19/linux/</url>
    
    <content type="html"><![CDATA[<h3 id="liunx安装docker容器"><a href="#liunx安装docker容器" class="headerlink" title="liunx安装docker容器"></a>liunx安装docker容器</h3><h2 id="（1）先查看一下操作系统的版本"><a href="#（1）先查看一下操作系统的版本" class="headerlink" title="（1）先查看一下操作系统的版本"></a>（1）先查看一下操作系统的版本</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">username -r</span><br></code></pre></td></tr></table></figure><h2 id="（2）如果版本低于3-10，需要更新版本"><a href="#（2）如果版本低于3-10，需要更新版本" class="headerlink" title="（2）如果版本低于3.10，需要更新版本"></a>（2）如果版本低于3.10，需要更新版本</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yum update</span><br></code></pre></td></tr></table></figure><h2 id="（3）下载yum命令需要用到的工具"><a href="#（3）下载yum命令需要用到的工具" class="headerlink" title="（3）下载yum命令需要用到的工具"></a>（3）下载yum命令需要用到的工具</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">yum</span> install -y yum-utils device-mapper-persistent-<span class="hljs-class"><span class="hljs-keyword">data</span> lvm2</span><br></code></pre></td></tr></table></figure><h2 id="（4）配置docker下载的镜像，不然下载会很慢"><a href="#（4）配置docker下载的镜像，不然下载会很慢" class="headerlink" title="（4）配置docker下载的镜像，不然下载会很慢"></a>（4）配置docker下载的镜像，不然下载会很慢</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>官网地址<br>yum-config-manager --add-repo https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/</span>centos/docker-ce.repo<br><span class="hljs-regexp">//</span>阿里云地址<br>yum-config-manager --add-repo http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo<br></code></pre></td></tr></table></figure><h2 id="（6）查看docker版本列表，选择要下载的版本"><a href="#（6）查看docker版本列表，选择要下载的版本" class="headerlink" title="（6）查看docker版本列表，选择要下载的版本"></a>（6）查看docker版本列表，选择要下载的版本</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">yum <span class="hljs-keyword">list</span> docker-<span class="hljs-keyword">ce</span> --showduplicates | <span class="hljs-keyword">sort</span> -r<br></code></pre></td></tr></table></figure><h2 id="（7）安装docker"><a href="#（7）安装docker" class="headerlink" title="（7）安装docker"></a>（7）安装docker</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install docker-ce-<span class="hljs-number">17</span>.<span class="hljs-number">12</span>.<span class="hljs-number">0</span>.ce <br></code></pre></td></tr></table></figure><h2 id="（8）查看docker版本，看是否安装成功"><a href="#（8）查看docker版本，看是否安装成功" class="headerlink" title="（8）查看docker版本，看是否安装成功"></a>（8）查看docker版本，看是否安装成功</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>查看版本<br>docker version<br><br><span class="hljs-regexp">//</span>验证是否安装成功<br><span class="hljs-number">1</span>.systemctl start dokcer  <span class="hljs-regexp">//</span>启动docker容器<br><br><span class="hljs-number">2</span>.systemctl enable docker <span class="hljs-regexp">//</span>设置docker容器开机自启动<br><br><span class="hljs-number">3</span>.docker version(如果出现客户端和服务端说明安装docker成功了)<br><br><span class="hljs-regexp">//</span>查看docker的启动状态<br>systemctl status docker<br></code></pre></td></tr></table></figure><h2 id="（9）卸载docker"><a href="#（9）卸载docker" class="headerlink" title="（9）卸载docker"></a>（9）卸载docker</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>查询docker安装过的包<br>yum list installed | grep docker<br><br><span class="hljs-regexp">//</span>删除安装包<br>yum remove docker-ce.x86_64 ddocker-ce-cli.x86_64 -y<br><br><span class="hljs-regexp">//</span>删除镜像/容器等<br>rm -rf <span class="hljs-regexp">/var/</span>lib/docker<br></code></pre></td></tr></table></figure><h2 id="（10）查看docker里面镜像的运行情况"><a href="#（10）查看docker里面镜像的运行情况" class="headerlink" title="（10）查看docker里面镜像的运行情况"></a>（10）查看docker里面镜像的运行情况</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker ps <span class="hljs-regexp">//</span>查看正在运行的镜像<br><br>docker ps -a <span class="hljs-regexp">//</span>查看所有的镜像<br></code></pre></td></tr></table></figure><h2 id="（11）关闭运行的镜像和docker容器"><a href="#（11）关闭运行的镜像和docker容器" class="headerlink" title="（11）关闭运行的镜像和docker容器"></a>（11）关闭运行的镜像和docker容器</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">docker stop 镜像的id或者镜像名称 <span class="hljs-comment">//关闭运行的镜像</span><br><br>systemctl stop docker <span class="hljs-comment">//停止正在运行的容器</span><br></code></pre></td></tr></table></figure><h2 id="一些docker查看的参数"><a href="#一些docker查看的参数" class="headerlink" title="一些docker查看的参数"></a>一些docker查看的参数</h2><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs diff">docker ps [OPTIONS]<br><br>OPTIONS说明：<br><span class="hljs-deletion">-a :显示所有的容器，包括未运行的。</span><br><span class="hljs-deletion">-f :根据条件过滤显示的内容。</span><br><span class="hljs-deletion">--format :指定返回值的模板文件。</span><br><span class="hljs-deletion">-l :显示最近创建的容器。</span><br><span class="hljs-deletion">-n :列出最近创建的n个容器。</span><br><span class="hljs-deletion">--no-trunc :不截断输出。</span><br><span class="hljs-deletion">-q :静默模式，只显示容器编号。</span><br><span class="hljs-deletion">-s :显示总的文件大小。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>node的版本管理工具</title>
    <link href="/2022/07/19/node/"/>
    <url>/2022/07/19/node/</url>
    
    <content type="html"><![CDATA[<h3 id="node的版本管理工具"><a href="#node的版本管理工具" class="headerlink" title="node的版本管理工具"></a>node的版本管理工具</h3><h1 id="（1）如果已经安装了node，可以通过npm命令直接安装"><a href="#（1）如果已经安装了node，可以通过npm命令直接安装" class="headerlink" title="（1）如果已经安装了node，可以通过npm命令直接安装"></a>（1）如果已经安装了node，可以通过npm命令直接安装</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">#这个安装的是windows版本</span><br>npm <span class="hljs-keyword">install </span>-g nvmw <br><span class="hljs-comment">#查看nvmw的版本，看是否安装成功</span><br>nvmw -V <span class="hljs-comment">##注意：这个V是大写</span><br><span class="hljs-comment">#然后可以通过nvmw命令安装node的版本（版本需要是5.0.0以上的）</span><br>列如：nvmw <span class="hljs-keyword">install </span>v14.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-comment">#可以在当前窗口切换node的版本</span><br>nvmw use v14.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> <span class="hljs-title">||</span> nvmw <span class="hljs-keyword">switch </span>v14.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/18/hello-world/"/>
    <url>/2022/07/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
